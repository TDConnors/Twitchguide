@using Microsoft.AspNet.Identity
@model TwitchGuide.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security



@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

        <div class="top-menu">
            <ul class="nav pull-right top-menu">
                <li><a class="logout" href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
            </ul>
        </div>
    }
}
else
{
    <div class="top-menu">
        @{
            var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
            using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    <p>
                        @foreach (AuthenticationDescription p in loginProviders)
                        {
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                        }
                    </p>
                </div>
            }
        }
        <ul class="nav pull-right top-menu">

            @*<li>@Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })</li>*@
            <li><a class="logout" href="@Url.Action("Login", "Account", routeValues: new { id = "loginLink" })">Sign in</a></li>
        </ul>
    </div>
}